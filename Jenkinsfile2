pipeline {
    agent any
    stages {
        stage('One') {
            steps {
                    echo 'Hi, this is Syed'
                }
        }
        stage('Two'){      
            steps {
                input('Do you want to proceed?')
            }
        }
        stage('Three') {
            when {
                not {
                    branch "master"
                }
            }
            steps {
                echo "Hello"
            }
        }
        stage('Sonarqube') {
                environment {
                scannerHome = tool 'SonarQube'
                }
                steps {
                    withSonarQubeEnv('sonarqube') {
                    sh "${scannerHome}/bin/sonar-scanner"
                    }
                    timeout(time: 10, unit: 'MINUTES') {
                        waitForQualityGate abortPipeline: true
                    }
                }
        }
    }
}
